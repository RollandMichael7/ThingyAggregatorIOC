# Database for Nordic thingy star network nodes
# INPB = ID as defined in thingyAggregator.h

record(aSub, "$(Sys)$(Dev)SensorWriter") {
	field(DESC,	"Sensor toggle for thingy node")
	field(SCAN,	".2 second")
	field(SNAM,	"toggle_sensor")
	field(VAL,	0)
	field(INPA,	$(NodeID))
	field(INPB,	"$(Sys)$(Dev)SensorToggle.VAL")
	field(FTA,	"SHORT")
	field(FTB,	"SHORT")
	field(OUTA, "$(Sys)$(Dev)SensorToggle.VAL")
	field(FTVA,	"SHORT")
}

record(ai, "$(Sys)$(Dev)SensorToggle") {
	field(VAL,	"0")
}

record(aSub, "$(Sys)$(Dev)EnvConfigReader") {
	field(DESC,	"Read env config for thingy node")
	field(SCAN,	".2 second")
	field(SNAM,	"read_env_config")
	field(INPA,	$(NodeID))
	field(INPB, "$(Sys)$(Dev)EnvConfigRead.VAL")
	field(FTA,	"SHORT")
	field(FTB,	"SHORT")
	field(OUTA,	"$(Sys)$(Dev)EnvConfigRead.VAL")
	field(FTVA,	"SHORT")
}

record(ai, "$(Sys)$(Dev)EnvConfigRead") {
	field(VAL,	"1")
}

record(aSub, "$(Sys)$(Dev)EnvConfigWriter") {
	field(DESC,	"Write env config for thingy node")
	field(SCAN,	".2 second")
	field(SNAM,	"write_env_config")
	field(INPA,	$(NodeID))
	field(INPB, "$(Sys)$(Dev)EnvConfigWrite.VAL")
	field(FTA,	"SHORT")
	field(FTB,	"SHORT")
	field(OUTA,	"$(Sys)$(Dev)EnvConfigWrite.VAL")
	field(FTVA,	"SHORT")
}

record(ai, "$(Sys)$(Dev)EnvConfigWrite") {
	field(VAL,	"0")
}

record(aSub, "$(Sys)$(Dev)MotionConfigReader") {
	field(DESC,	"Read env config for thingy node")
	field(SCAN,	".2 second")
	field(SNAM,	"read_motion_config")
	field(INPA,	$(NodeID))
	field(INPB, "$(Sys)$(Dev)MotionConfigRead.VAL")
	field(FTA,	"SHORT")
	field(FTB,	"SHORT")
	field(OUTA,	"$(Sys)$(Dev)MotionConfigRead.VAL")
	field(FTVA,	"SHORT")
}

record(ai, "$(Sys)$(Dev)MotionConfigRead") {
	field(VAL,	"1")
}

record(aSub, "$(Sys)$(Dev)ConnParamReader") {
	field(DESC,	"Read conn params for thingy node")
	field(SCAN,	".2 second")
	field(SNAM,	"read_conn_param")
	field(INPA,	$(NodeID))
	field(INPB, "$(Sys)$(Dev)ConnParamRead.VAL")
	field(FTA,	"SHORT")
	field(FTB,	"SHORT")
	field(OUTA,	"$(Sys)$(Dev)ConnParamRead.VAL")
	field(FTVA,	"SHORT")
}

record(ai, "$(Sys)$(Dev)ConnParamRead") {
	field(VAL,	"1")
}

record(aSub, "$(Sys)$(Dev)ConnParamWriter") {
	field(DESC,	"Write conn params for thingy node")
	field(SCAN,	".2 second")
	field(SNAM,	"write_conn_param")
	field(INPA,	$(NodeID))
	field(INPB, "$(Sys)$(Dev)ConnParamWrite.VAL")
	field(FTA,	"SHORT")
	field(FTB,	"SHORT")
	field(OUTA,	"$(Sys)$(Dev)ConnParamWrite.VAL")
	field(FTVA,	"SHORT")
}

record(ai, "$(Sys)$(Dev)ConnParamWrite") {
	field(VAL,	"0")
}

record(aSub, "$(Sys)$(Dev)ConnectionNotifier") {
	field(DESC,	"Connection listener for thingy node")
	field(SCAN,	"Passive")
	field(INAM,	"register_pv")
	field(INPA,	$(NodeID))
	field(INPB,	"0")
	field(FTA,	"SHORT")
	field(FTB,	"SHORT")
	field(OUTA,	"$(Sys)$(Dev)Connection.VAL")
	field(FTVA,	"FLOAT")
	field(FLNK,	"$(Sys)$(Dev)Connection")
}

record(ai, "$(Sys)$(Dev)Connection") {
	field(DESC,	"Connection for thingy node")
	field(VAL,	1)
}

record(aSub, "$(Sys)$(Dev)StatusNotifier") {
	field(DESC,	"Status listener for thingy node")
	field(SCAN,	"Passive")
	field(INAM,	"register_pv")
	field(INPA,	$(NodeID))
	field(INPB,	"1")
	field(FTA,	"SHORT")
	field(FTB,	"SHORT")
	field(OUTA,	"$(Sys)$(Dev)Status.VAL")
	field(FTVA,	"STRING")
	field(FLNK,	"$(Sys)$(Dev)Status")
}

record(stringin, "$(Sys)$(Dev)Status") {
	field(DESC,	"Status for thingy node")
}

record(aSub, "$(Sys)$(Dev)RSSINotifier") {
	field(DESC,	"RSSI listener for thingy node")
	field(SCAN,	"Passive")
	field(INAM,	"register_pv")
	field(INPA,	$(NodeID))
	field(INPB,	"2")
	field(FTA,	"SHORT")
	field(FTB,	"SHORT")
	field(OUTA,	"$(Sys)$(Dev)RSSI.VAL")
	field(FTVA,	"FLOAT")
	field(FLNK,	"$(Sys)$(Dev)RSSI")
}

record(ai, "$(Sys)$(Dev)RSSI") {
	field(DESC,	"RSSI for thingy node")
	field(EGU,	"")
	field(PREC,	"0")
	field(VAL,	"-1")
}

record(aSub, "$(Sys)$(Dev)BatteryNotifier") {
	field(DESC,	"Battery listener for thingy node")
	field(SCAN,	"Passive")
	field(INAM,	"register_pv")
	field(INPA,	$(NodeID))
	field(INPB,	"3")
	field(FTA,	"SHORT")
	field(FTB,	"SHORT")
	field(OUTA,	"$(Sys)$(Dev)Battery.VAL")
	field(FTVA,	"FLOAT")
	field(FLNK,	"$(Sys)$(Dev)Battery")
}

record(ai, "$(Sys)$(Dev)Battery") {
	field(DESC,	"Battery level for thingy node")
	field(EGU,	"%")
	field(PREC,	"0")
	field(HIGH,	"80")
	field(HIHI,	"100")
	field(LOW,	"10")
	field(LOLO,	"5")
	field(VAL,	"-1")
}

record(aSub, "$(Sys)$(Dev)ButtonNotifier") {
	field(DESC,	"Button listener for thingy node")
	field(SCAN,	"Passive")
	field(INAM,	"register_pv")
	field(INPA,	$(NodeID))
	field(INPB,	"4")
	field(FTA,	"SHORT")
	field(FTB,	"SHORT")
	field(OUTA,	"$(Sys)$(Dev)Button.VAL")
	field(FTVA,	"FLOAT")
	field(FLNK,	"$(Sys)$(Dev)Button")
}

record(ai, "$(Sys)$(Dev)Button") {
	field(DESC,	"Button state for thingy node")
}

record(aSub, "$(Sys)$(Dev)TemperatureNotifier") {
	field(DESC,	"Temperature listener for thingy node")
	field(SCAN,	"Passive")
	field(INAM,	"register_pv")
	field(INPA,	$(NodeID))
	field(INPB,	"5")
	field(FTA,	"SHORT")
	field(FTB,	"SHORT")
	field(OUTA,	"$(Sys)$(Dev)Temperature.VAL")
	field(FTVA,	"FLOAT")
	field(FLNK,	"$(Sys)$(Dev)Temperature")
}

record(ai, "$(Sys)$(Dev)Temperature") {
	field(DESC,	"Temperature value for thingy node")
	field(EGU,	"C")
	field(PREC,	"2")
	field(HIGH,	"50")
	field(HIHI,	"200")
	field(LOW,	"5")
	field(LOLO,	"0")
	field(VAL,	"-1")
}

record(aSub, "$(Sys)$(Dev)HumidityNotifier") {
	field(DESC,	"Humidity listener for thingy node")
	field(SCAN,	"Passive")
	field(INAM,	"register_pv")
	field(INPA,	$(NodeID))
	field(INPB,	"6")
	field(FTA,	"SHORT")
	field(FTB,	"SHORT")
	field(OUTA,	"$(Sys)$(Dev)Humidity.VAL")
	field(FTVA,	"FLOAT")
	field(FLNK,	"$(Sys)$(Dev)Humidity")
}

record(ai, "$(Sys)$(Dev)Humidity") {
	field(DESC,	"Humidity value for thingy node")
	field(EGU,	"%")
	field(PREC,	"0")
	field(VAL,	"-1")
}

record(aSub, "$(Sys)$(Dev)PressureNotifier") {
	field(DESC,	"Pressure listener for thingy node")
	field(SCAN,	"Passive")
	field(INAM,	"register_pv")
	field(INPA,	$(NodeID))
	field(INPB,	"7")
	field(FTA,	"SHORT")
	field(FTB,	"SHORT")
	field(OUTA,	"$(Sys)$(Dev)Pressure.VAL")
	field(FTVA,	"FLOAT")
	field(FLNK,	"$(Sys)$(Dev)Pressure")
}

record(ai, "$(Sys)$(Dev)Pressure") {
	field(DESC,	"Pressure value for thingy node")
	field(EGU,	"hPa")
	field(PREC,	"2")
	field(VAL,	"-1")
}

record(aSub, "$(Sys)$(Dev)AirQualityNotifier") {
	field(DESC,	"Air quality listener for thingy node")
	field(SCAN,	"Passive")
	field(INAM,	"register_pv")
	field(INPA,	$(NodeID))
	field(INPB,	"8")
	field(FTA,	"SHORT")
	field(FTB,	"SHORT")
	field(OUTA,	"$(Sys)$(Dev)AirQuality.VAL")
	field(FTVA,	"STRING")
	field(FLNK,	"$(Sys)$(Dev)AirQuality")
}

record(stringin, "$(Sys)$(Dev)AirQuality") {
	field(DESC,	"Air quality reading for thingy node")
}

record(aSub, "$(Sys)$(Dev)eCO2Notifier") {
	field(DESC,	"eCO2 listener for thingy node")
	field(SCAN,	"Passive")
	field(INAM,	"register_pv")
	field(INPA,	$(NodeID))
	field(INPB,	"9")
	field(FTA,	"SHORT")
	field(FTB,	"SHORT")
	field(OUTA,	"$(Sys)$(Dev)eCO2.VAL")
	field(FTVA,	"FLOAT")
	field(FLNK,	"$(Sys)$(Dev)eCO2")
}

record(ai, "$(Sys)$(Dev)eCO2") {
	field(DESC,	"eCO2 value for thingy node")
	field(EGU,	"ppm")
	field(PREC,	"0")
	field(VAL,	"-1")
}

record(aSub, "$(Sys)$(Dev)TVOCNotifier") {
	field(DESC,	"TVOC listener for thingy node")
	field(SCAN,	"Passive")
	field(INAM,	"register_pv")
	field(INPA,	$(NodeID))
	field(INPB,	"10")
	field(FTA,	"SHORT")
	field(FTB,	"SHORT")
	field(OUTA,	"$(Sys)$(Dev)TVOC.VAL")
	field(FTVA,	"FLOAT")
	field(FLNK,	"$(Sys)$(Dev)TVOC")
}

record(ai, "$(Sys)$(Dev)TVOC") {
	field(DESC,	"TVOC value for thingy node")
	field(EGU,	"ppb")
	field(PREC,	"0")
	field(VAL,	"-1")
}

record(aSub, "$(Sys)$(Dev)TempIntervalWriter") {
	field(DESC,	"Temperature interval writer")
	field(SCAN,	"Passive")
	field(INAM,	"register_pv")
	field(INPA,	$(NodeID))
	field(INPB,	"11")
	field(INPC,	"$(Sys)$(Dev)TemperatureInterval.VAL")
	field(FTA,	"SHORT")
	field(FTB,	"SHORT")
	field(FTC,	"FLOAT")
	field(OUTA,	"$(Sys)$(Dev)TemperatureInterval.VAL")
	field(FTVA,	"FLOAT")
	field(FLNK,	"$(Sys)$(Dev)TemperatureInterval")
}

record(ai, "$(Sys)$(Dev)TemperatureInterval") {
	field(DESC,	"Temperature interval for thingy node")
	field(EGU,	"ms")
	field(PREC,	"0")
	field(VAL,	"-1")
}

record(aSub, "$(Sys)$(Dev)PressureIntervalWriter") {
	field(DESC,	"Pressure interval writer for thingy node")
	field(SCAN,	"Passive")
	field(INAM,	"register_pv")
	field(INPA,	$(NodeID))
	field(INPB,	"12")
	field(INPC,	"$(Sys)$(Dev)PressureInterval.VAL")
	field(FTA,	"SHORT")
	field(FTB,	"SHORT")
	field(FTC,	"FLOAT")
	field(OUTA,	"$(Sys)$(Dev)PressureInterval.VAL")
	field(FTVA,	"FLOAT")
	field(FLNK,	"$(Sys)$(Dev)PressureInterval")
}

record(ai, "$(Sys)$(Dev)PressureInterval") {
	field(DESC,	"Pressure interval for thingy node")
	field(EGU,	"ms")
	field(PREC,	"0")
	field(VAL,	"-1")
}

record(aSub, "$(Sys)$(Dev)HumidIntervalWriter") {
	field(DESC,	"Humidity interval writer for thingy node")
	field(SCAN,	"Passive")
	field(INAM,	"register_pv")
	field(INPA,	$(NodeID))
	field(INPB,	"13")
	field(INPC,	"$(Sys)$(Dev)HumidityInterval.VAL")
	field(FTA,	"SHORT")
	field(FTB,	"SHORT")
	field(FTC,	"FLOAT")
	field(OUTA,	"$(Sys)$(Dev)HumidityInterval.VAL")
	field(FTVA,	"FLOAT")
	field(FLNK,	"$(Sys)$(Dev)HumidityInterval")
}

record(ai, "$(Sys)$(Dev)HumidityInterval") {
	field(DESC,	"Humidity interval for thingy node")
	field(EGU,	"ms")
	field(PREC,	"0")
	field(VAL,	"-1")
}

record(aSub, "$(Sys)$(Dev)GasModeWriter") {
	field(DESC,	"Gas mode writer for thingy node")
	field(SCAN,	"Passive")
	field(INAM,	"register_pv")
	field(INPA,	$(NodeID))
	field(INPB,	"14")
	field(INPC,	"$(Sys)$(Dev)GasMode.VAL")
	field(FTA,	"SHORT")
	field(FTB,	"SHORT")
	field(FTC,	"FLOAT")
	field(OUTA,	"$(Sys)$(Dev)GasMode.VAL")
	field(FTVA,	"FLOAT")
	field(FLNK,	"$(Sys)$(Dev)GasMode")
}

record(ai, "$(Sys)$(Dev)GasMode") {
	field(DESC,	"Gas mode for thingy node")
	field(PREC,	"0")
	field(VAL,	"-1")
}

record(aSub, "$(Sys)$(Dev)QuaternionWNotifier") {
	field(DESC,	"QuaternionW listener for thingy node")
	field(SCAN,	"Passive")
	field(INAM,	"register_pv")
	field(INPA,	$(NodeID))
	field(INPB,	"15")
	field(FTA,	"SHORT")
	field(FTB,	"SHORT")
	field(OUTA,	"$(Sys)$(Dev)QuaternionW.VAL")
	field(FTVA,	"FLOAT")
	field(FLNK,	"$(Sys)$(Dev)QuaternionW")
}

record(ai, "$(Sys)$(Dev)QuaternionW") {
	field(DESC,	"QuaternionW value for thingy node")
	field(PREC,	"0")
	field(VAL,	"-1")
}

record(aSub, "$(Sys)$(Dev)QuaternionXNotifier") {
	field(DESC,	"QuaternionX listener for thingy node")
	field(SCAN,	"Passive")
	field(INAM,	"register_pv")
	field(INPA,	$(NodeID))
	field(INPB,	"16")
	field(FTA,	"SHORT")
	field(FTB,	"SHORT")
	field(OUTA,	"$(Sys)$(Dev)QuaternionX.VAL")
	field(FTVA,	"FLOAT")
	field(FLNK,	"$(Sys)$(Dev)QuaternionX")
}

record(ai, "$(Sys)$(Dev)QuaternionX") {
	field(DESC,	"QuaternionX value for thingy node")
	field(PREC,	"2")
	field(VAL,	"-1")
}

record(aSub, "$(Sys)$(Dev)QuaternionYNotifier") {
	field(DESC,	"QuaternionY listener for thingy node")
	field(SCAN,	"Passive")
	field(INAM,	"register_pv")
	field(INPA,	$(NodeID))
	field(INPB,	"17")
	field(FTA,	"SHORT")
	field(FTB,	"SHORT")
	field(OUTA,	"$(Sys)$(Dev)QuaternionY.VAL")
	field(FTVA,	"FLOAT")
	field(FLNK,	"$(Sys)$(Dev)QuaternionY")
}

record(ai, "$(Sys)$(Dev)QuaternionY") {
	field(DESC,	"QuaternionY value for thingy node")
	field(PREC,	"2")
	field(VAL,	"-1")
}

record(aSub, "$(Sys)$(Dev)QuaternionZNotifier") {
	field(DESC,	"QuaternionZ listener for thingy node")
	field(SCAN,	"Passive")
	field(INAM,	"register_pv")
	field(INPA,	$(NodeID))
	field(INPB,	"18")
	field(FTA,	"SHORT")
	field(FTB,	"SHORT")
	field(OUTA,	"$(Sys)$(Dev)QuaternionZ.VAL")
	field(FTVA,	"FLOAT")
	field(FLNK,	"$(Sys)$(Dev)QuaternionZ")
}

record(ai, "$(Sys)$(Dev)QuaternionZ") {
	field(DESC,	"QuaternionZ value for thingy node")
	field(PREC,	"2")
	field(VAL,	"-1")
}

record(aSub, "$(Sys)$(Dev)AccelerationXNotifier") {
	field(DESC,	"AccelerationX listener for thingy node")
	field(SCAN,	"Passive")
	field(INAM,	"register_pv")
	field(INPA,	$(NodeID))
	field(INPB,	"19")
	field(FTA,	"SHORT")
	field(FTB,	"SHORT")
	field(OUTA,	"$(Sys)$(Dev)AccelerationX.VAL")
	field(FTVA,	"FLOAT")
	field(FLNK,	"$(Sys)$(Dev)AccelerationX")
}

record(ai, "$(Sys)$(Dev)AccelerationX") {
	field(DESC,	"AccelerationX value for thingy node")
	field(EGU,	"G")
	field(PREC,	"2")
	field(VAL,	"-1")
}

record(aSub, "$(Sys)$(Dev)AccelerationYNotifier") {
	field(DESC,	"AccelerationY listener for thingy node")
	field(SCAN,	"Passive")
	field(INAM,	"register_pv")
	field(INPA,	$(NodeID))
	field(INPB,	"20")
	field(FTA,	"SHORT")
	field(FTB,	"SHORT")
	field(OUTA,	"$(Sys)$(Dev)AccelerationY.VAL")
	field(FTVA,	"FLOAT")
	field(FLNK,	"$(Sys)$(Dev)AccelerationY")
}

record(ai, "$(Sys)$(Dev)AccelerationY") {
	field(DESC,	"AccelerationY value for thingy node")
	field(EGU,	"G")
	field(PREC,	"2")
	field(VAL,	"-1")
}

record(aSub, "$(Sys)$(Dev)AccelerationZNotifier") {
	field(DESC,	"AccelerationZ listener for thingy node")
	field(SCAN,	"Passive")
	field(INAM,	"register_pv")
	field(INPA,	$(NodeID))
	field(INPB,	"21")
	field(FTA,	"SHORT")
	field(FTB,	"SHORT")
	field(OUTA,	"$(Sys)$(Dev)AccelerationZ.VAL")
	field(FTVA,	"FLOAT")
	field(FLNK,	"$(Sys)$(Dev)AccelerationZ")
}

record(ai, "$(Sys)$(Dev)AccelerationZ") {
	field(DESC,	"AccelerationZ value for thingy node")
	field(EGU,	"G")
	field(PREC,	"2")
	field(VAL,	"-1")
}

record(aSub, "$(Sys)$(Dev)GyroscopeXNotifier") {
	field(DESC,	"GyroscopeX listener for thingy node")
	field(SCAN,	"Passive")
	field(INAM,	"register_pv")
	field(INPA,	$(NodeID))
	field(INPB,	"22")
	field(FTA,	"SHORT")
	field(FTB,	"SHORT")
	field(OUTA,	"$(Sys)$(Dev)GyroscopeX.VAL")
	field(FTVA,	"FLOAT")
	field(FLNK,	"$(Sys)$(Dev)GyroscopeX")
}

record(ai, "$(Sys)$(Dev)GyroscopeX") {
	field(DESC,	"GyroscopeX value for thingy node")
	field(EGU,	"deg/s")
	field(PREC,	"2")
	field(VAL,	"-1")
}

record(aSub, "$(Sys)$(Dev)GyroscopeYNotifier") {
	field(DESC,	"GyroscopeY listener for thingy node")
	field(SCAN,	"Passive")
	field(INAM,	"register_pv")
	field(INPA,	$(NodeID))
	field(INPB,	"23")
	field(FTA,	"SHORT")
	field(FTB,	"SHORT")
	field(OUTA,	"$(Sys)$(Dev)GyroscopeY.VAL")
	field(FTVA,	"FLOAT")
	field(FLNK,	"$(Sys)$(Dev)GyroscopeY")
}

record(ai, "$(Sys)$(Dev)GyroscopeY") {
	field(DESC,	"GyroscopeY value for thingy node")
	field(EGU,	"deg/s")
	field(PREC,	"2")
	field(VAL,	"-1")
}

record(aSub, "$(Sys)$(Dev)GyroscopeZNotifier") {
	field(DESC,	"GyroscopeZ listener for thingy node")
	field(SCAN,	"Passive")
	field(INAM,	"register_pv")
	field(INPA,	$(NodeID))
	field(INPB,	"24")
	field(FTA,	"SHORT")
	field(FTB,	"SHORT")
	field(OUTA,	"$(Sys)$(Dev)GyroscopeZ.VAL")
	field(FTVA,	"FLOAT")
	field(FLNK,	"$(Sys)$(Dev)GyroscopeZ")
}

record(ai, "$(Sys)$(Dev)GyroscopeZ") {
	field(DESC,	"GyroscopeZ value for thingy node")
	field(EGU,	"deg/s")
	field(PREC,	"2")
	field(VAL,	"-1")
}

record(aSub, "$(Sys)$(Dev)CompassXNotifier") {
	field(DESC,	"CompassX listener for thingy node")
	field(SCAN,	"Passive")
	field(INAM,	"register_pv")
	field(INPA,	$(NodeID))
	field(INPB,	"25")
	field(FTA,	"SHORT")
	field(FTB,	"SHORT")
	field(OUTA,	"$(Sys)$(Dev)CompassX.VAL")
	field(FTVA,	"FLOAT")
	field(FLNK,	"$(Sys)$(Dev)CompassX")
}

record(ai, "$(Sys)$(Dev)CompassX") {
	field(DESC,	"CompassX value for thingy node")
	field(EGU,	"uT")
	field(PREC,	"2")
	field(VAL,	"-1")
}

record(aSub, "$(Sys)$(Dev)CompassYNotifier") {
	field(DESC,	"CompassY listener for thingy node")
	field(SCAN,	"Passive")
	field(INAM,	"register_pv")
	field(INPA,	$(NodeID))
	field(INPB,	"26")
	field(FTA,	"SHORT")
	field(FTB,	"SHORT")
	field(OUTA,	"$(Sys)$(Dev)CompassY.VAL")
	field(FTVA,	"FLOAT")
	field(FLNK,	"$(Sys)$(Dev)CompassY")
}

record(ai, "$(Sys)$(Dev)CompassY") {
	field(DESC,	"CompassY value for thingy node")
	field(EGU,	"uT")
	field(PREC,	"2")
	field(VAL,	"-1")
}

record(aSub, "$(Sys)$(Dev)CompassZNotifier") {
	field(DESC,	"CompassZ listener for thingy node")
	field(SCAN,	"Passive")
	field(INAM,	"register_pv")
	field(INPA,	$(NodeID))
	field(INPB,	"27")
	field(FTA,	"SHORT")
	field(FTB,	"SHORT")
	field(OUTA,	"$(Sys)$(Dev)CompassZ.VAL")
	field(FTVA,	"FLOAT")
	field(FLNK,	"$(Sys)$(Dev)CompassZ")
}

record(ai, "$(Sys)$(Dev)CompassZ") {
	field(DESC,	"CompassZ value for thingy node")
	field(EGU,	"uT")
	field(PREC,	"2")
	field(VAL,	"-1")
}

record(aSub, "$(Sys)$(Dev)RollNotifier") {
	field(DESC,	"Roll listener for thingy node")
	field(SCAN,	"Passive")
	field(INAM,	"register_pv")
	field(INPA,	$(NodeID))
	field(INPB,	"28")
	field(FTA,	"SHORT")
	field(FTB,	"SHORT")
	field(OUTA,	"$(Sys)$(Dev)Roll.VAL")
	field(FTVA,	"FLOAT")
	field(FLNK,	"$(Sys)$(Dev)Roll")
}

record(ai, "$(Sys)$(Dev)Roll") {
	field(DESC,	"Roll value for thingy node")
	field(EGU,	"deg")
	field(PREC,	"2")
	field(VAL,	"-1")
}

record(aSub, "$(Sys)$(Dev)PitchNotifier") {
	field(DESC,	"Pitch listener for thingy node")
	field(SCAN,	"Passive")
	field(INAM,	"register_pv")
	field(INPA,	$(NodeID))
	field(INPB,	"29")
	field(FTA,	"SHORT")
	field(FTB,	"SHORT")
	field(OUTA,	"$(Sys)$(Dev)Pitch.VAL")
	field(FTVA,	"FLOAT")
	field(FLNK,	"$(Sys)$(Dev)Pitch")
}

record(ai, "$(Sys)$(Dev)Pitch") {
	field(DESC,	"Pitch value for thingy node")
	field(EGU,	"deg")
	field(PREC,	"2")
	field(VAL,	"-1")
}

record(aSub, "$(Sys)$(Dev)YawNotifier") {
	field(DESC,	"Yaw listener for thingy node")
	field(SCAN,	"Passive")
	field(INAM,	"register_pv")
	field(INPA,	$(NodeID))
	field(INPB,	"30")
	field(FTA,	"SHORT")
	field(FTB,	"SHORT")
	field(OUTA,	"$(Sys)$(Dev)Yaw.VAL")
	field(FTVA,	"FLOAT")
	field(FLNK,	"$(Sys)$(Dev)Yaw")
}

record(ai, "$(Sys)$(Dev)Yaw") {
	field(DESC,	"Yaw value for thingy node")
	field(EGU,	"deg")
	field(PREC,	"2")
	field(VAL,	"-1")
}

record(aSub, "$(Sys)$(Dev)HeadingNotifier") {
	field(DESC,	"Heading listener for thingy node")
	field(SCAN,	"Passive")
	field(INAM,	"register_pv")
	field(INPA,	$(NodeID))
	field(INPB,	"31")
	field(FTA,	"SHORT")
	field(FTB,	"SHORT")
	field(OUTA,	"$(Sys)$(Dev)Heading.VAL")
	field(FTVA,	"FLOAT")
	field(FLNK,	"$(Sys)$(Dev)Heading")
}

record(ai, "$(Sys)$(Dev)Heading") {
	field(DESC,	"Heading value for thingy node")
	field(EGU,	"deg")
	field(PREC,	"2")
	field(VAL,	"-1")
}

record(aSub, "$(Sys)$(Dev)StepIntervalWriter") {
	field(DESC,	"Step interval writer for thingy node")
	field(SCAN,	"Passive")
	field(INAM,	"register_pv")
	field(INPA,	$(NodeID))
	field(INPB,	"32")
	field(FTA,	"SHORT")
	field(FTB,	"SHORT")
	field(OUTA,	"$(Sys)$(Dev)StepInterval.VAL")
	field(FTVA,	"FLOAT")
	field(FLNK,	"$(Sys)$(Dev)StepInterval")
}

record(ai, "$(Sys)$(Dev)StepInterval") {
	field(DESC,	"Step interval for thingy node")
	field(EGU,	"ms")
	field(PREC,	"0")
	field(VAL,	"-1")
}

record(aSub, "$(Sys)$(Dev)TempCompIntervalWriter") {
	#field(DESC,	"Temp comp interval writer for thingy node")
	field(SCAN,	"Passive")
	field(INAM,	"register_pv")
	field(INPA,	$(NodeID))
	field(INPB,	"33")
	field(FTA,	"SHORT")
	field(FTB,	"SHORT")
	field(OUTA,	"$(Sys)$(Dev)TempCompInterval.VAL")
	field(FTVA,	"FLOAT")
	field(FLNK,	"$(Sys)$(Dev)TempCompInterval")
}

record(ai, "$(Sys)$(Dev)TempCompInterval") {
	field(DESC,	"Temp comp interval for thingy node")
	field(EGU,	"ms")
	field(PREC,	"0")
	field(VAL,	"-1")
}

record(aSub, "$(Sys)$(Dev)MagCompIntervalWriter") {
	field(DESC,	"Mag comp interval writer for thingy node")
	field(SCAN,	"Passive")
	field(INAM,	"register_pv")
	field(INPA,	$(NodeID))
	field(INPB,	"34")
	field(FTA,	"SHORT")
	field(FTB,	"SHORT")
	field(OUTA,	"$(Sys)$(Dev)MagCompInterval.VAL")
	field(FTVA,	"FLOAT")
	field(FLNK,	"$(Sys)$(Dev)MagCompInterval")
}

record(ai, "$(Sys)$(Dev)MagCompInterval") {
	field(DESC,	"Mag comp interval for thingy node")
	field(EGU,	"ms")
	field(PREC,	"0")
	field(VAL,	"-1")
}

record(aSub, "$(Sys)$(Dev)MotionFreqWriter") {
	field(DESC,	"Motion freq writer for thingy node")
	field(SCAN,	"Passive")
	field(INAM,	"register_pv")
	field(INPA,	$(NodeID))
	field(INPB,	"35")
	field(FTA,	"SHORT")
	field(FTB,	"SHORT")
	field(OUTA,	"$(Sys)$(Dev)MotionFrequency.VAL")
	field(FTVA,	"FLOAT")
	field(FLNK,	"$(Sys)$(Dev)MotionFrequency")
}

record(ai, "$(Sys)$(Dev)MotionFrequency") {
	field(DESC,	"Motion frequency for thingy node")
	field(EGU,	"hz")
	field(PREC,	"0")
	field(VAL,	"-1")
}

record(aSub, "$(Sys)$(Dev)WakeMotionWriter") {
	field(DESC,	"Wake on motion writer for thingy node")
	field(SCAN,	"Passive")
	field(INAM,	"register_pv")
	field(INPA,	$(NodeID))
	field(INPB,	"36")
	field(FTA,	"SHORT")
	field(FTB,	"SHORT")
	field(OUTA,	"$(Sys)$(Dev)WakeOnMotion.VAL")
	field(FTVA,	"FLOAT")
	field(FLNK,	"$(Sys)$(Dev)WakeOnMotion")
}

record(ai, "$(Sys)$(Dev)WakeOnMotion") {
	field(DESC,	"Mag comp interval for thingy node")
	field(PREC,	"0")
	field(VAL,	"-1")
}


record(aSub, "$(Sys)$(Dev)MinIntervalWriter") {
	field(DESC,	"Min interval writer for thingy node")
	field(SCAN,	"Passive")
	field(INAM,	"register_pv")
	field(INPA,	$(NodeID))
	field(INPB,	"37")
	field(INPC,	"$(Sys)$(Dev)MinInterval.VAL")
	field(FTA,	"SHORT")
	field(FTB,	"SHORT")
	field(FTC,	"FLOAT")
	field(OUTA,	"$(Sys)$(Dev)MinInterval.VAL")
	field(FTVA,	"FLOAT")
	field(FLNK,	"$(Sys)$(Dev)MinInterval")
}

record(ai, "$(Sys)$(Dev)MinInterval") {
	field(DESC,	"Min conn interval for thingy node")
	field(EGU,	"ms")
	field(PREC,	"1")
	field(VAL,	"-1")
}

record(aSub, "$(Sys)$(Dev)MaxIntervalWriter") {
	field(DESC,	"Max conn interval writer for thingy node")
	field(SCAN,	"Passive")
	field(INAM,	"register_pv")
	field(INPA,	$(NodeID))
	field(INPB,	"38")
	field(INPC,	"$(Sys)$(Dev)MaxInterval.VAL")
	field(FTA,	"SHORT")
	field(FTB,	"SHORT")
	field(FTC,	"FLOAT")
	field(OUTA,	"$(Sys)$(Dev)MaxInterval.VAL")
	field(FTVA,	"FLOAT")
	field(FLNK,	"$(Sys)$(Dev)MaxInterval")
}

record(ai, "$(Sys)$(Dev)MaxInterval") {
	field(DESC,	"Max conn interval for thingy node")
	field(EGU,	"ms")
	field(PREC,	"1")
	field(VAL,	"-1")
}

record(aSub, "$(Sys)$(Dev)LatencyWriter") {
	field(DESC,	"Slave latency writer for thingy node")
	field(SCAN,	"Passive")
	field(INAM,	"register_pv")
	field(INPA,	$(NodeID))
	field(INPB,	"39")
	field(INPC,	"$(Sys)$(Dev)Latency.VAL")
	field(FTA,	"SHORT")
	field(FTB,	"SHORT")
	field(FTC,	"FLOAT")
	field(OUTA,	"$(Sys)$(Dev)Latency.VAL")
	field(FTVA,	"FLOAT")
	field(FLNK,	"$(Sys)$(Dev)Latency")
}

record(ai, "$(Sys)$(Dev)Latency") {
	field(DESC,	"Slave latency for thingy node")
	field(EGU,	"events")
	field(PREC,	"0")
	field(VAL,	"-1")
}

record(aSub, "$(Sys)$(Dev)TimeoutWriter") {
	field(DESC,	"Timeout writer for thingy node")
	field(SCAN,	"Passive")
	field(INAM,	"register_pv")
	field(INPA,	$(NodeID))
	field(INPB,	"40")
	field(INPC,	"$(Sys)$(Dev)Timeout.VAL")
	field(FTA,	"SHORT")
	field(FTB,	"SHORT")
	field(FTC,	"FLOAT")
	field(OUTA,	"$(Sys)$(Dev)Timeout.VAL")
	field(FTVA,	"FLOAT")
	field(FLNK,	"$(Sys)$(Dev)Timeout")
}

record(ai, "$(Sys)$(Dev)Timeout") {
	field(DESC,	"Supervision timeout for thingy node")
	field(EGU,	"ms")
	field(PREC,	"0")
	field(VAL,	"-1")
}

record(aSub, "$(Sys)$(Dev)QuaternionsWriter") {
	field(DESC,	"Quaternion toggle for thingy node")
	field(SCAN,	"Passive")
	field(INAM,	"register_pv")
	field(INPA,	$(NodeID))
	field(INPB,	"41")
	field(FTA,	"SHORT")
	field(FTB,	"SHORT")
	field(OUTA,	"$(Sys)$(Dev)Quaternions.VAL")
	field(FTVA,	"FLOAT")
	field(FLNK,	"$(Sys)$(Dev)Quaternions")
}

record(ai, "$(Sys)$(Dev)Quaternions") {
	field(DESC,	"Quaternion toggle for thingy node")
	field(VAL,	0)
}

record(aSub, "$(Sys)$(Dev)RawMotionWriter") {
	field(DESC,	"Raw motion toggle for thingy node")
	field(SCAN,	"Passive")
	field(INAM,	"register_pv")
	field(INPA,	$(NodeID))
	field(INPB,	"42")
	field(FTA,	"SHORT")
	field(FTB,	"SHORT")
	field(OUTA,	"$(Sys)$(Dev)RawMotion.VAL")
	field(FTVA,	"FLOAT")
	field(FLNK,	"$(Sys)$(Dev)RawMotion")
}

record(ai, "$(Sys)$(Dev)RawMotion") {
	field(DESC,	"Raw motion toggle for thingy node")
	field(VAL,	0)
}

record(aSub, "$(Sys)$(Dev)EulerWriter") {
	field(DESC,	"Euler motion toggle for thingy node")
	field(SCAN,	"Passive")
	field(INAM,	"register_pv")
	field(INPA,	$(NodeID))
	field(INPB,	"43")
	field(FTA,	"SHORT")
	field(FTB,	"SHORT")
	field(OUTA,	"$(Sys)$(Dev)Euler.VAL")
	field(FTVA,	"FLOAT")
	field(FLNK,	"$(Sys)$(Dev)Euler")
}

record(ai, "$(Sys)$(Dev)Euler") {
	field(DESC,	"Euler toggle for thingy node")
	field(VAL,	0)
}

record(aSub, "$(Sys)$(Dev)HeadingWriter") {
	field(DESC,	"Heading toggle for thingy node")
	field(SCAN,	"Passive")
	field(INAM,	"register_pv")
	field(INPA,	$(NodeID))
	field(INPB,	"44")
	field(FTA,	"SHORT")
	field(FTB,	"SHORT")
	field(OUTA,	"$(Sys)$(Dev)HeadingToggle.VAL")
	field(FTVA,	"FLOAT")
	field(FLNK,	"$(Sys)$(Dev)HeadingToggle")
}

record(ai, "$(Sys)$(Dev)HeadingToggle") {
	field(DESC,	"Heading toggle for thingy node")
	field(VAL,	0)
}
